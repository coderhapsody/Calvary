// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace Calvary.Data
{
    // MemberMarriage
    public partial class MemberMarriageMapping : EntityTypeConfiguration<MemberMarriage>
    {
        public MemberMarriageMapping()
            : this("dbo")
        {
        }
 
        public MemberMarriageMapping(string schema)
        {
            ToTable(schema + ".MemberMarriage");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.MemberId).HasColumnName("MemberId").IsRequired().HasColumnType("int");
            Property(x => x.SpouseId).HasColumnName("SpouseId").IsOptional().HasColumnType("int");
            Property(x => x.SpouseName).HasColumnName("SpouseName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.MarriageDate).HasColumnName("MarriageDate").IsOptional().HasColumnType("date");
            Property(x => x.ShrineId).HasColumnName("ShrineId").IsOptional().HasColumnType("int");
            Property(x => x.Priest).HasColumnName("Priest").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.LegalRegNo).HasColumnName("LegalRegNo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.LegalDate).HasColumnName("LegalDate").IsOptional().HasColumnType("date");
            Property(x => x.ChurchRegNo).HasColumnName("ChurchRegNo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(20);
            Property(x => x.City).HasColumnName("City").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName("CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName("CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName("ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName("ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.Member).WithMany(b => b.MemberMarriages).HasForeignKey(c => c.SpouseId); // FK_MemberMarriage_Member
            HasOptional(a => a.Shrine).WithMany(b => b.MemberMarriages).HasForeignKey(c => c.ShrineId); // FK_MemberMarriage_Shrine
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
