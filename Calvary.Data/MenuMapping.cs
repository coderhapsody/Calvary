// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace Calvary.Data
{
    // Menu
    public partial class MenuMapping : EntityTypeConfiguration<Menu>
    {
        public MenuMapping()
            : this("dbo")
        {
        }
 
        public MenuMapping(string schema)
        {
            ToTable(schema + ".Menu");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.None);
            Property(x => x.Title).HasColumnName("Title").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.NavigationTo).HasColumnName("NavigationTo").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(200);
            Property(x => x.Seq).HasColumnName("Seq").IsRequired().HasColumnType("int");
            Property(x => x.ParentMenuId).HasColumnName("ParentMenuID").IsOptional().HasColumnType("int");
            Property(x => x.IsActive).HasColumnName("IsActive").IsRequired().HasColumnType("bit");
            Property(x => x.CreatedWhen).HasColumnName("CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedWho).HasColumnName("CreatedWho").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(30);
            Property(x => x.ChangedWhen).HasColumnName("ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedWho).HasColumnName("ChangedWho").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(30);

            // Foreign keys
            HasOptional(a => a.Menu_ParentMenuId).WithMany(b => b.Menus).HasForeignKey(c => c.ParentMenuId); // FK_Menu_ref_ParentMenu
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
