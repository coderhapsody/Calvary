// <auto-generated>
// ReSharper disable RedundantUsingDirective
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable RedundantNameQualifier
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity;
using System.Data.Entity.ModelConfiguration;
using System.Threading;
using DatabaseGeneratedOption = System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption;

namespace Calvary.Data
{
    // Member
    public partial class MemberMapping : EntityTypeConfiguration<Member>
    {
        public MemberMapping()
            : this("dbo")
        {
        }
 
        public MemberMapping(string schema)
        {
            ToTable(schema + ".Member");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName("Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.MemberNo).HasColumnName("MemberNo").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Name).HasColumnName("Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.NickName).HasColumnName("NickName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Gender).HasColumnName("Gender").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(1);
            Property(x => x.RegionId).HasColumnName("RegionId").IsOptional().HasColumnType("int");
            Property(x => x.BloodType).HasColumnName("BloodType").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5);
            Property(x => x.Rhesus).HasColumnName("Rhesus").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(1);
            Property(x => x.MaritalStatus).HasColumnName("MaritalStatus").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5);
            Property(x => x.WhenFlagApa).HasColumnName("WhenFlagAPA").IsOptional().HasColumnType("date");
            Property(x => x.JoinDate).HasColumnName("JoinDate").IsOptional().HasColumnType("date");
            Property(x => x.JoinFromShrineId).HasColumnName("JoinFromShrineId").IsOptional().HasColumnType("int");
            Property(x => x.JoinFlagAtps).HasColumnName("JoinFlagATPS").IsRequired().HasColumnType("bit");
            Property(x => x.ResignDate).HasColumnName("ResignDate").IsOptional().HasColumnType("date");
            Property(x => x.ResignToShrineId).HasColumnName("ResignToShrineId").IsOptional().HasColumnType("int");
            Property(x => x.ResignReasonId).HasColumnName("ResignReasonId").IsOptional().HasColumnType("int");
            Property(x => x.Address).HasColumnName("Address").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(500);
            Property(x => x.City).HasColumnName("City").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.HomePhone).HasColumnName("HomePhone").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CellPhone1).HasColumnName("CellPhone1").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CellPhone2).HasColumnName("CellPhone2").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Email).HasColumnName("Email").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.BirthDate).HasColumnName("BirthDate").IsOptional().HasColumnType("date");
            Property(x => x.BirthCity).HasColumnName("BirthCity").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.OfficeName).HasColumnName("OfficeName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.OfficeAddress).HasColumnName("OfficeAddress").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.OfficePhone).HasColumnName("OfficePhone").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.OfficeCity).HasColumnName("OfficeCity").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.OfficeRole).HasColumnName("OfficeRole").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.JobId).HasColumnName("JobId").IsOptional().HasColumnType("int");
            Property(x => x.LastEducationGradeId).HasColumnName("LastEducationGradeId").IsOptional().HasColumnType("int");
            Property(x => x.EducationMajorId).HasColumnName("EducationMajorId").IsOptional().HasColumnType("int");
            Property(x => x.SkillId1).HasColumnName("SkillId1").IsOptional().HasColumnType("int");
            Property(x => x.SkillId2).HasColumnName("SkillId2").IsOptional().HasColumnType("int");
            Property(x => x.SkillId3).HasColumnName("SkillId3").IsOptional().HasColumnType("int");
            Property(x => x.HobbyId1).HasColumnName("HobbyId1").IsOptional().HasColumnType("int");
            Property(x => x.HobbyId2).HasColumnName("HobbyId2").IsOptional().HasColumnType("int");
            Property(x => x.HobbyId3).HasColumnName("HobbyId3").IsOptional().HasColumnType("int");
            Property(x => x.ChrismationType).HasColumnName("ChrismationType").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5);
            Property(x => x.BaptizedReasonId).HasColumnName("BaptizedReasonId").IsOptional().HasColumnType("int");
            Property(x => x.ChrismationShrineId).HasColumnName("ChrismationShrineId").IsOptional().HasColumnType("int");
            Property(x => x.ChrismationPriest).HasColumnName("ChrismationPriest").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.ChrismationDate).HasColumnName("ChrismationDate").IsOptional().HasColumnType("date");
            Property(x => x.ChrismationCert).HasColumnName("ChrismationCert").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChrismationFlagAtis).HasColumnName("ChrismationFlagATIS").IsRequired().HasColumnType("bit");
            Property(x => x.SpouseName).HasColumnName("SpouseName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.SpouseMemberNo).HasColumnName("SpouseMemberNo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.MarriageDate).HasColumnName("MarriageDate").IsOptional().HasColumnType("date");
            Property(x => x.MarriageCert).HasColumnName("MarriageCert").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.MarriageCity).HasColumnName("MarriageCity").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.MarriageShrineId).HasColumnName("MarriageShrineId").IsOptional().HasColumnType("int");
            Property(x => x.MarriagePriest).HasColumnName("MarriagePriest").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.MatrimonyDate).HasColumnName("MatrimonyDate").IsOptional().HasColumnType("date");
            Property(x => x.FatherName).HasColumnName("FatherName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.FatherChrismationType).HasColumnName("FatherChrismationType").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5);
            Property(x => x.FatherMemberNo).HasColumnName("FatherMemberNo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.MotherName).HasColumnName("MotherName").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.MotherChrismationType).HasColumnName("MotherChrismationType").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5);
            Property(x => x.MotherMemberNo).HasColumnName("MotherMemberNo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.EthnicId).HasColumnName("EthnicId").IsOptional().HasColumnType("int");
            Property(x => x.JoinNote).HasColumnName("JoinNote").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);
            Property(x => x.ResignNote).HasColumnName("ResignNote").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);
            Property(x => x.ChildhoodBaptizedShrineId).HasColumnName("ChildhoodBaptizedShrineId").IsOptional().HasColumnType("int");
            Property(x => x.ChildhoodBaptizedPriest).HasColumnName("ChildhoodBaptizedPriest").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.ChildhoodBaptizedDate).HasColumnName("ChildhoodBaptizedDate").IsOptional().HasColumnType("date");
            Property(x => x.ChildhoodBaptizedCert).HasColumnName("ChildhoodBaptizedCert").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.ChildhoodBaptizedFlagAtiot).HasColumnName("ChildhoodBaptizedFlagATIOT").IsRequired().HasColumnType("bit");
            Property(x => x.DeceasedDate).HasColumnName("DeceasedDate").IsOptional().HasColumnType("date");
            Property(x => x.DeceasedNotes).HasColumnName("DeceasedNotes").IsOptional().IsUnicode(false).HasColumnType("text").HasMaxLength(2147483647);
            Property(x => x.Photo).HasColumnName("Photo").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.CreatedWhen).HasColumnName("CreatedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedBy).HasColumnName("CreatedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.ChangedWhen).HasColumnName("ChangedWhen").IsRequired().HasColumnType("datetime");
            Property(x => x.ChangedBy).HasColumnName("ChangedBy").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.BaptizedReason).WithMany(b => b.Members).HasForeignKey(c => c.BaptizedReasonId); // FK_Member_BaptizedReason
            HasOptional(a => a.EducationGrade).WithMany(b => b.Members).HasForeignKey(c => c.LastEducationGradeId); // FK_Member_LastEducationGrade
            HasOptional(a => a.EducationMajor).WithMany(b => b.Members).HasForeignKey(c => c.EducationMajorId); // FK_Member_EducationMajor
            HasOptional(a => a.Ethnic).WithMany(b => b.Members).HasForeignKey(c => c.EthnicId); // FK_Member_Ethnic
            HasOptional(a => a.Hobby_HobbyId1).WithMany(b => b.Members_HobbyId1).HasForeignKey(c => c.HobbyId1); // FK_Member_Hobby
            HasOptional(a => a.Hobby_HobbyId2).WithMany(b => b.Members_HobbyId2).HasForeignKey(c => c.HobbyId2); // FK_Member_Hobby2
            HasOptional(a => a.Hobby_HobbyId3).WithMany(b => b.Members_HobbyId3).HasForeignKey(c => c.HobbyId3); // FK_Member_Hobby3
            HasOptional(a => a.Job).WithMany(b => b.Members).HasForeignKey(c => c.JobId); // FK_Member_Job
            HasOptional(a => a.Region).WithMany(b => b.Members).HasForeignKey(c => c.RegionId); // FK_Member_Region
            HasOptional(a => a.ResignReason).WithMany(b => b.Members).HasForeignKey(c => c.ResignReasonId); // FK_Member_ResignReason
            HasOptional(a => a.Shrine_ChildhoodBaptizedShrineId).WithMany(b => b.Members_ChildhoodBaptizedShrineId).HasForeignKey(c => c.ChildhoodBaptizedShrineId); // FK_Member_ChildhoodBaptizedShrine
            HasOptional(a => a.Shrine_ChrismationShrineId).WithMany(b => b.Members_ChrismationShrineId).HasForeignKey(c => c.ChrismationShrineId); // FK_Member_ChrismationShrine
            HasOptional(a => a.Shrine_JoinFromShrineId).WithMany(b => b.Members_JoinFromShrineId).HasForeignKey(c => c.JoinFromShrineId); // FK_Member_JoinFromShrine
            HasOptional(a => a.Shrine_ResignToShrineId).WithMany(b => b.Members_ResignToShrineId).HasForeignKey(c => c.ResignToShrineId); // FK_Member_ResignToShrine
            HasOptional(a => a.Skill_SkillId1).WithMany(b => b.Members_SkillId1).HasForeignKey(c => c.SkillId1); // FK_Member_Skill1
            HasOptional(a => a.Skill_SkillId2).WithMany(b => b.Members_SkillId2).HasForeignKey(c => c.SkillId2); // FK_Member_Skill2
            HasOptional(a => a.Skill_SkillId3).WithMany(b => b.Members_SkillId3).HasForeignKey(c => c.SkillId3); // FK_Member_Skill3
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
